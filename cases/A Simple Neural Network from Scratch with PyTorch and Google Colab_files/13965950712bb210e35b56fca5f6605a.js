document.write('<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css">')
document.write('<div id=\"gist91298551\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-py_nn-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-py_nn-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"><\/td>\n        <td id=\"file-py_nn-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">class<\/span> <span class=\"pl-en\">Neural_Network<\/span>(<span class=\"pl-e\">nn<\/span>.<span class=\"pl-e\">Module<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"><\/td>\n        <td id=\"file-py_nn-py-LC2\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-c1\">__init__<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, ):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"><\/td>\n        <td id=\"file-py_nn-py-LC3\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">super<\/span>(Neural_Network, <span class=\"pl-c1\">self<\/span>).<span class=\"pl-c1\">__init__<\/span>()<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"><\/td>\n        <td id=\"file-py_nn-py-LC4\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> parameters<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"><\/td>\n        <td id=\"file-py_nn-py-LC5\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> <span class=\"pl-k\">TODO<\/span>: parameters can be parameterized instead of declaring them here<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"><\/td>\n        <td id=\"file-py_nn-py-LC6\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.inputSize <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">2<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"><\/td>\n        <td id=\"file-py_nn-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.outputSize <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">1<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"><\/td>\n        <td id=\"file-py_nn-py-LC8\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.hiddenSize <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">3<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"><\/td>\n        <td id=\"file-py_nn-py-LC9\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"><\/td>\n        <td id=\"file-py_nn-py-LC10\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> weights<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"><\/td>\n        <td id=\"file-py_nn-py-LC11\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.W1 <span class=\"pl-k\">=<\/span> torch.randn(<span class=\"pl-c1\">self<\/span>.inputSize, <span class=\"pl-c1\">self<\/span>.hiddenSize) <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> 3 X 2 tensor<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"><\/td>\n        <td id=\"file-py_nn-py-LC12\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.W2 <span class=\"pl-k\">=<\/span> torch.randn(<span class=\"pl-c1\">self<\/span>.hiddenSize, <span class=\"pl-c1\">self<\/span>.outputSize) <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> 3 X 1 tensor<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"><\/td>\n        <td id=\"file-py_nn-py-LC13\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"><\/td>\n        <td id=\"file-py_nn-py-LC14\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">forward<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">X<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"><\/td>\n        <td id=\"file-py_nn-py-LC15\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.z <span class=\"pl-k\">=<\/span> torch.matmul(X, <span class=\"pl-c1\">self<\/span>.W1) <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> 3 X 3 &quot;.dot&quot; does not broadcast in PyTorch<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"><\/td>\n        <td id=\"file-py_nn-py-LC16\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.z2 <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.sigmoid(<span class=\"pl-c1\">self<\/span>.z) <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> activation function<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"><\/td>\n        <td id=\"file-py_nn-py-LC17\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.z3 <span class=\"pl-k\">=<\/span> torch.matmul(<span class=\"pl-c1\">self<\/span>.z2, <span class=\"pl-c1\">self<\/span>.W2)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"><\/td>\n        <td id=\"file-py_nn-py-LC18\" class=\"blob-code blob-code-inner js-file-line\">        o <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.sigmoid(<span class=\"pl-c1\">self<\/span>.z3) <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> final activation function<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"><\/td>\n        <td id=\"file-py_nn-py-LC19\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> o<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"><\/td>\n        <td id=\"file-py_nn-py-LC20\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"><\/td>\n        <td id=\"file-py_nn-py-LC21\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">sigmoid<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">s<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"><\/td>\n        <td id=\"file-py_nn-py-LC22\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> <span class=\"pl-c1\">1<\/span> <span class=\"pl-k\">/<\/span> (<span class=\"pl-c1\">1<\/span> <span class=\"pl-k\">+<\/span> torch.exp(<span class=\"pl-k\">-<\/span>s))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"><\/td>\n        <td id=\"file-py_nn-py-LC23\" class=\"blob-code blob-code-inner js-file-line\">    <\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"><\/td>\n        <td id=\"file-py_nn-py-LC24\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">sigmoidPrime<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">s<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"><\/td>\n        <td id=\"file-py_nn-py-LC25\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> derivative of sigmoid<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"><\/td>\n        <td id=\"file-py_nn-py-LC26\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> s <span class=\"pl-k\">*<\/span> (<span class=\"pl-c1\">1<\/span> <span class=\"pl-k\">-<\/span> s)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"><\/td>\n        <td id=\"file-py_nn-py-LC27\" class=\"blob-code blob-code-inner js-file-line\">    <\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"><\/td>\n        <td id=\"file-py_nn-py-LC28\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">backward<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">X<\/span>, <span class=\"pl-smi\">y<\/span>, <span class=\"pl-smi\">o<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"><\/td>\n        <td id=\"file-py_nn-py-LC29\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.o_error <span class=\"pl-k\">=<\/span> y <span class=\"pl-k\">-<\/span> o <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> error in output<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"><\/td>\n        <td id=\"file-py_nn-py-LC30\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.o_delta <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.o_error <span class=\"pl-k\">*<\/span> <span class=\"pl-c1\">self<\/span>.sigmoidPrime(o) <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> derivative of sig to error<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"><\/td>\n        <td id=\"file-py_nn-py-LC31\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.z2_error <span class=\"pl-k\">=<\/span> torch.matmul(<span class=\"pl-c1\">self<\/span>.o_delta, torch.t(<span class=\"pl-c1\">self<\/span>.W2))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"><\/td>\n        <td id=\"file-py_nn-py-LC32\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.z2_delta <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.z2_error <span class=\"pl-k\">*<\/span> <span class=\"pl-c1\">self<\/span>.sigmoidPrime(<span class=\"pl-c1\">self<\/span>.z2)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"><\/td>\n        <td id=\"file-py_nn-py-LC33\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.W1 <span class=\"pl-k\">+=<\/span> torch.matmul(torch.t(X), <span class=\"pl-c1\">self<\/span>.z2_delta)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"><\/td>\n        <td id=\"file-py_nn-py-LC34\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.W2 <span class=\"pl-k\">+=<\/span> torch.matmul(torch.t(<span class=\"pl-c1\">self<\/span>.z2), <span class=\"pl-c1\">self<\/span>.o_delta)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"><\/td>\n        <td id=\"file-py_nn-py-LC35\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"><\/td>\n        <td id=\"file-py_nn-py-LC36\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">train<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">X<\/span>, <span class=\"pl-smi\">y<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"><\/td>\n        <td id=\"file-py_nn-py-LC37\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> forward + backward pass for training<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"><\/td>\n        <td id=\"file-py_nn-py-LC38\" class=\"blob-code blob-code-inner js-file-line\">        o <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.forward(X)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L39\" class=\"blob-num js-line-number\" data-line-number=\"39\"><\/td>\n        <td id=\"file-py_nn-py-LC39\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.backward(X, y, o)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L40\" class=\"blob-num js-line-number\" data-line-number=\"40\"><\/td>\n        <td id=\"file-py_nn-py-LC40\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L41\" class=\"blob-num js-line-number\" data-line-number=\"41\"><\/td>\n        <td id=\"file-py_nn-py-LC41\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">saveWeights<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">model<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L42\" class=\"blob-num js-line-number\" data-line-number=\"42\"><\/td>\n        <td id=\"file-py_nn-py-LC42\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> we will use the PyTorch internal storage functions<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L43\" class=\"blob-num js-line-number\" data-line-number=\"43\"><\/td>\n        <td id=\"file-py_nn-py-LC43\" class=\"blob-code blob-code-inner js-file-line\">        torch.save(model, <span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>NN<span class=\"pl-pds\">&quot;<\/span><\/span>)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L44\" class=\"blob-num js-line-number\" data-line-number=\"44\"><\/td>\n        <td id=\"file-py_nn-py-LC44\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> you can reload model with all the weights and so forth with:<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L45\" class=\"blob-num js-line-number\" data-line-number=\"45\"><\/td>\n        <td id=\"file-py_nn-py-LC45\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> torch.load(&quot;NN&quot;)<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L46\" class=\"blob-num js-line-number\" data-line-number=\"46\"><\/td>\n        <td id=\"file-py_nn-py-LC46\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L47\" class=\"blob-num js-line-number\" data-line-number=\"47\"><\/td>\n        <td id=\"file-py_nn-py-LC47\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">predict<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L48\" class=\"blob-num js-line-number\" data-line-number=\"48\"><\/td>\n        <td id=\"file-py_nn-py-LC48\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">print<\/span> (<span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Predicted data based on trained weights: <span class=\"pl-pds\">&quot;<\/span><\/span>)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L49\" class=\"blob-num js-line-number\" data-line-number=\"49\"><\/td>\n        <td id=\"file-py_nn-py-LC49\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">print<\/span> (<span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Input (scaled): <span class=\"pl-cce\">\\n<\/span><span class=\"pl-pds\">&quot;<\/span><\/span> <span class=\"pl-k\">+<\/span> <span class=\"pl-c1\">str<\/span>(xPredicted))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-py_nn-py-L50\" class=\"blob-num js-line-number\" data-line-number=\"50\"><\/td>\n        <td id=\"file-py_nn-py-LC50\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">print<\/span> (<span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Output: <span class=\"pl-cce\">\\n<\/span><span class=\"pl-pds\">&quot;<\/span><\/span> <span class=\"pl-k\">+<\/span> <span class=\"pl-c1\">str<\/span>(<span class=\"pl-c1\">self<\/span>.forward(xPredicted)))<\/td>\n      <\/tr>\n<\/table>\n\n\n  <\/div>\n\n  <\/div>\n<\/div>\n\n      <\/div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/omarsar/13965950712bb210e35b56fca5f6605a/raw/920fa5d61701c93b57a022a84e2081cfb72a86a6/py_nn.py\" style=\"float:right\">view raw<\/a>\n        <a href=\"https://gist.github.com/omarsar/13965950712bb210e35b56fca5f6605a#file-py_nn-py\">py_nn.py<\/a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub<\/a>\n      <\/div>\n    <\/div>\n<\/div>\n')
